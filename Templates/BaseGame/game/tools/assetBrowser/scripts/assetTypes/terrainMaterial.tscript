function AssetBrowser::createTerrainMaterialAsset(%this)
{
   %moduleName = AssetBrowser.newAssetSettings.moduleName;
   %modulePath = "data/" @ %moduleName;
      
   %assetName = AssetBrowser.newAssetSettings.assetName;      
   
   %assetType = AssetBrowser.newAssetSettings.assetType;
   %assetPath = AssetBrowser.dirHandler.currentAddress @ "/";    
   
   %tamlpath = %assetPath @ %assetName @ ".asset.taml";
   %scriptPath = %assetPath @ %assetName @ "." @ $TorqueScriptFileExtension;
   
   %asset = new TerrainMaterialAsset()
   {
      AssetName = %assetName;
      versionId = 1;
      materialDefinitionName = %assetName;
   };
   
   %matDef = new TerrainMaterial(%assetName)
   {
      internalName = %moduleName @ ":" @ %assetName;
      diffuseMap = "";
      detailMap = "";
      detailSize = "10";
      isManaged = "1";
      detailBrightness = "1";
      Enabled = "1";
      diffuseSize = "200";
   };
   
   %fxMatDef = new Material("TerrainFX_" @ %assetName)
   {
      mapTo = %assetName;
      footstepSoundId = 0;
      terrainMaterials = "1";
      ShowDust = "1";
      showFootprints = "1";
      materialTag0 = "Terrain";
      effectColor[0] = "0.42 0.42 0 1";
      effectColor[1] = "0.42 0.42 0 1";
      impactSoundId = "0";
   };
   
   %asset.add(%matDef);
   %asset.add(%fxMatDef);
   
   TamlWrite(%asset, %tamlpath);
   
   %moduleDef = ModuleDatabase.findModule(%moduleName, 1);
	AssetDatabase.addDeclaredAsset(%moduleDef, %tamlpath);
	
	AssetDatabase.acquireAsset("\"" @ %moduleName @ ":" @ %assetName @ "\"");

	AssetBrowser.refresh();
	
   //If we've got the terrain mat editor open, go ahead and update it all
   TerrainMaterialDlg.onWake();
   
	return %tamlpath;
}

function AssetBrowser::editTerrainMaterialAsset(%this, %assetDef)
{
   TerrainMaterialDlg.show(0, 0, 0);
   TerrainMaterialDlg.setActiveMaterial(%assetDef.assetName);
}

function AssetBrowser::duplicateTerrainMaterialAsset(%this, %assetDef, %targetModule)
{
}

function AssetBrowser::importTerrainMaterialAsset(%this, %assetDef)
{
}

function AssetBrowser::dragAndDropTerrainMaterialAsset(%this, %assetDef, %dropTarget)
{
   if(!isObject(%dropTarget))
      return;
}

function AssetBrowser::renameTerrainMaterialAsset(%this, %assetDef, %newAssetId, %originalName, %newName)
{
}

function AssetBrowser::deleteTerrainMaterialAsset(%this, %assetDef)
{
}

function AssetBrowser::buildTerrainMaterialAssetPreview(%this, %assetDef, %previewData)
{
   %previewData.assetName = %assetDef.assetName;
   %previewData.assetPath = "";
   %previewData.doubleClickCommand = "";
   
   %previewData.previewImage = "ToolsModule:terrainMaterialIcon_image";
   
   %previewData.assetFriendlyName = %assetDef.gameObjectName;
   %previewData.assetDesc = %assetDef.description;
   %previewData.tooltip = %assetDef.gameObjectName;
}

function GuiInspectorTypeTerrainMaterialAssetPtr::onClick( %this, %fieldName )
{
   //Get our data
   %obj = %this.getInspector().getInspectObject(0);
}

function GuiInspectorTypeTerrainMaterialAssetPtr::onControlDropped( %this, %payload, %position )
{
   
}